{
    "openapi": "3.0.0",
    "info": {
        "title": "E-Property API Documentation",
        "description": "API documentation for the E-Property project",
        "contact": {
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "E-Property API Server"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Authenticate a user and return an API token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Registration",
                "description": "Register a new user account",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "description": "Logout the current user and revoke their token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/search": {
            "get": {
                "tags": [
                    "Global Search"
                ],
                "summary": "Search across all property types",
                "description": "Returns paginated list of properties from all types that match the search criteria",
                "operationId": "searchAllProperties",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query for property fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "description": "Filter by country IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state_ids",
                        "in": "query",
                        "description": "Filter by state IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "district_ids",
                        "in": "query",
                        "description": "Filter by district IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city_ids",
                        "in": "query",
                        "description": "Filter by city IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house": {
            "get": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Get list of house properties",
                "description": "Returns paginated list of house properties",
                "operationId": "getHouseProperties",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query for property fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "description": "Filter by country IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state_ids",
                        "in": "query",
                        "description": "Filter by state IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "district_ids",
                        "in": "query",
                        "description": "Filter by district IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city_ids",
                        "in": "query",
                        "description": "Filter by city IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Create new house property",
                "description": "Creates a new house property",
                "operationId": "createHouseProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "owner_name",
                                    "contact_number",
                                    "size",
                                    "village",
                                    "taluka_id",
                                    "district_id",
                                    "state_id",
                                    "pincode",
                                    "country_id"
                                ],
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{id}": {
            "get": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Get house property by ID",
                "description": "Returns a single house property",
                "operationId": "getHouseProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Update house property",
                "description": "Updates a house property",
                "operationId": "updateHouseProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Delete house property",
                "description": "Deletes a house property",
                "operationId": "deleteHouseProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{property}/states/{countryId}": {
            "get": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Get states by country for house property",
                "description": "Returns states for a specific country",
                "operationId": "getStatesByCountryForHouse",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Gujarat"
                                                    },
                                                    "country_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{property}/districts/{stateId}": {
            "get": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Get districts by state for house property",
                "description": "Returns districts for a specific state",
                "operationId": "getDistrictsByStateForHouse",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "State ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad"
                                                    },
                                                    "state_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{property}/talukas/{districtId}": {
            "get": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Get talukas by district for house property",
                "description": "Returns talukas for a specific district",
                "operationId": "getTalukasByDistrictForHouse",
                "parameters": [
                    {
                        "name": "districtId",
                        "in": "path",
                        "description": "District ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad City"
                                                    },
                                                    "district_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{property}/amenities": {
            "post": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Store amenity for house property",
                "description": "Creates a new amenity",
                "operationId": "storeAmenityForHouse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Swimming Pool"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amenity created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Swimming Pool"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{property}/land-types": {
            "post": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Store land type for house property",
                "description": "Creates a new land type",
                "operationId": "storeLandTypeForHouse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Agricultural"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Land type created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Agricultural"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{property}/photo-positions": {
            "post": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Update photo positions for house property",
                "description": "Updates the order of photos for a property",
                "operationId": "updatePhotoPositionsForHouse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "positions"
                                ],
                                "properties": {
                                    "positions": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "index": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "newIndex": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo positions updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{property}/photos/{photoIndex}": {
            "delete": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Delete photo for house property",
                "description": "Deletes a specific photo from a property",
                "operationId": "deletePhotoForHouse",
                "parameters": [
                    {
                        "name": "photoIndex",
                        "in": "path",
                        "description": "Photo index",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/house/{property}/update-status": {
            "patch": {
                "tags": [
                    "House Properties"
                ],
                "summary": "Update status for house property",
                "description": "Updates the status of a house property",
                "operationId": "updateStatusForHouse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "urgent",
                                            "under_offer",
                                            "reserved",
                                            "sold",
                                            "cancelled",
                                            "coming_soon",
                                            "price_reduced"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "status_text": {
                                                    "type": "string",
                                                    "example": "Active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin": {
            "get": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Get list of land jamin properties",
                "description": "Returns paginated list of land jamin properties",
                "operationId": "getLandJaminProperties",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query for property fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "description": "Filter by country IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state_ids",
                        "in": "query",
                        "description": "Filter by state IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "district_ids",
                        "in": "query",
                        "description": "Filter by district IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city_ids",
                        "in": "query",
                        "description": "Filter by city IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Create new land jamin property",
                "description": "Creates a new land jamin property",
                "operationId": "createLandJaminProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "owner_name",
                                    "contact_number",
                                    "size",
                                    "village",
                                    "taluka_id",
                                    "district_id",
                                    "state_id",
                                    "pincode",
                                    "country_id"
                                ],
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{id}": {
            "get": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Get land jamin property by ID",
                "description": "Returns a single land jamin property",
                "operationId": "getLandJaminProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Update land jamin property",
                "description": "Updates a land jamin property",
                "operationId": "updateLandJaminProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Delete land jamin property",
                "description": "Deletes a land jamin property",
                "operationId": "deleteLandJaminProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{property}/states/{countryId}": {
            "get": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Get states by country for land jamin property",
                "description": "Returns states for a specific country",
                "operationId": "getStatesByCountryForLandJamin",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Gujarat"
                                                    },
                                                    "country_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{property}/districts/{stateId}": {
            "get": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Get districts by state for land jamin property",
                "description": "Returns districts for a specific state",
                "operationId": "getDistrictsByStateForLandJamin",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "State ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad"
                                                    },
                                                    "state_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{property}/talukas/{districtId}": {
            "get": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Get talukas by district for land jamin property",
                "description": "Returns talukas for a specific district",
                "operationId": "getTalukasByDistrictForLandJamin",
                "parameters": [
                    {
                        "name": "districtId",
                        "in": "path",
                        "description": "District ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad City"
                                                    },
                                                    "district_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{property}/amenities": {
            "post": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Store amenity for land jamin property",
                "description": "Creates a new amenity",
                "operationId": "storeAmenityForLandJamin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Swimming Pool"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amenity created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Swimming Pool"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{property}/land-types": {
            "post": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Store land type for land jamin property",
                "description": "Creates a new land type",
                "operationId": "storeLandTypeForLandJamin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Agricultural"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Land type created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Agricultural"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{property}/photo-positions": {
            "post": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Update photo positions for land jamin property",
                "description": "Updates the order of photos for a property",
                "operationId": "updatePhotoPositionsForLandJamin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "positions"
                                ],
                                "properties": {
                                    "positions": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "index": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "newIndex": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo positions updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{property}/photos/{photoIndex}": {
            "delete": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Delete photo for land jamin property",
                "description": "Deletes a specific photo from a property",
                "operationId": "deletePhotoForLandJamin",
                "parameters": [
                    {
                        "name": "photoIndex",
                        "in": "path",
                        "description": "Photo index",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-jamin/{property}/update-status": {
            "patch": {
                "tags": [
                    "Land Jamin Properties"
                ],
                "summary": "Update status for land jamin property",
                "description": "Updates the status of a land jamin property",
                "operationId": "updateStatusForLandJamin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "urgent",
                                            "under_offer",
                                            "reserved",
                                            "sold",
                                            "cancelled",
                                            "coming_soon",
                                            "price_reduced"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "status_text": {
                                                    "type": "string",
                                                    "example": "Active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/countries": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get list of countries",
                "description": "Returns list of countries",
                "operationId": "getCountries",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountriesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create new country",
                "description": "Creates a new country",
                "operationId": "createCountry",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "India"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "IN"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/countries/{id}": {
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update country",
                "description": "Updates a country",
                "operationId": "updateCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "India"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "IND"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Country not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete country",
                "description": "Deletes a country",
                "operationId": "deleteCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Country not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get list of states",
                "description": "Returns list of states",
                "operationId": "getStates",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create new state",
                "description": "Creates a new state",
                "operationId": "createState",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Gujarat"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "State created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/State"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states/{id}": {
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update state",
                "description": "Updates a state",
                "operationId": "updateState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Gujarat"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "State updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/State"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "State not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete state",
                "description": "Deletes a state",
                "operationId": "deleteState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "State deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "State not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/districts": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get list of districts",
                "description": "Returns list of districts",
                "operationId": "getDistricts",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistrictsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create new district",
                "description": "Creates a new district",
                "operationId": "createDistrict",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "state_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Ahmedabad"
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "District created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/District"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/districts/{id}": {
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update district",
                "description": "Updates a district",
                "operationId": "updateDistrict",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "District id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "state_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Ahmedabad"
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "District updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/District"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "District not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete district",
                "description": "Deletes a district",
                "operationId": "deleteDistrict",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "District id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "District deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "District not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cities": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get list of cities",
                "description": "Returns list of cities",
                "operationId": "getCities",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CitiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create new city",
                "description": "Creates a new city",
                "operationId": "createCity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "district_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Ahmedabad City"
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/City"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cities/{id}": {
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update city",
                "description": "Updates a city",
                "operationId": "updateCity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "City id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "district_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Ahmedabad City"
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/City"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "City not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete city",
                "description": "Deletes a city",
                "operationId": "deleteCity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "City id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "City not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/locations/states/{countryId}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get states by country",
                "description": "Returns list of states for a specific country",
                "operationId": "getStatesByCountry",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/locations/districts/{stateId}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get districts by state",
                "description": "Returns list of districts for a specific state",
                "operationId": "getDistrictsByState",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DistrictsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/locations/cities/{districtId}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get cities by district",
                "description": "Returns list of cities for a specific district",
                "operationId": "getCitiesByDistrict",
                "parameters": [
                    {
                        "name": "districtId",
                        "in": "path",
                        "description": "District id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CitiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/locations/entities": {
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location entity",
                "description": "Creates a new country, state, district, or city",
                "operationId": "storeEntity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "name"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "country",
                                            "state",
                                            "district",
                                            "city"
                                        ],
                                        "example": "country"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "India"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "IN"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/amenities": {
            "get": {
                "tags": [
                    "Master Data"
                ],
                "summary": "Get list of amenities",
                "description": "Returns list of all amenities",
                "operationId": "getAmenities",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AmenitiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Master Data"
                ],
                "summary": "Create new amenity",
                "description": "Creates a new amenity",
                "operationId": "createAmenity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Swimming Pool"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Swimming pool facility"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amenity created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Amenity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/amenities/{id}": {
            "put": {
                "tags": [
                    "Master Data"
                ],
                "summary": "Update amenity",
                "description": "Updates an amenity",
                "operationId": "updateAmenity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Amenity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Swimming Pool"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Swimming pool facility"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amenity updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Amenity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Amenity not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data"
                ],
                "summary": "Delete amenity",
                "description": "Deletes an amenity",
                "operationId": "deleteAmenity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Amenity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amenity deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Amenity not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-types": {
            "get": {
                "tags": [
                    "Master Data"
                ],
                "summary": "Get list of land types",
                "description": "Returns list of all land types",
                "operationId": "getLandTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LandTypesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Master Data"
                ],
                "summary": "Create new land type",
                "description": "Creates a new land type",
                "operationId": "createLandType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Agricultural"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Agricultural land"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Land type created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LandType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/land-types/{id}": {
            "put": {
                "tags": [
                    "Master Data"
                ],
                "summary": "Update land type",
                "description": "Updates a land type",
                "operationId": "updateLandType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Land type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Agricultural"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Agricultural land"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Land type updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LandType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Land type not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data"
                ],
                "summary": "Delete land type",
                "description": "Deletes a land type",
                "operationId": "deleteLandType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Land type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Land type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Land type not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot": {
            "get": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Get list of plot properties",
                "description": "Returns paginated list of plot properties",
                "operationId": "getPlotProperties",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query for property fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "description": "Filter by country IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state_ids",
                        "in": "query",
                        "description": "Filter by state IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "district_ids",
                        "in": "query",
                        "description": "Filter by district IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city_ids",
                        "in": "query",
                        "description": "Filter by city IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Create new plot property",
                "description": "Creates a new plot property",
                "operationId": "createPlotProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "owner_name",
                                    "contact_number",
                                    "size",
                                    "village",
                                    "taluka_id",
                                    "district_id",
                                    "state_id",
                                    "pincode",
                                    "country_id"
                                ],
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{id}": {
            "get": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Get plot property by ID",
                "description": "Returns a single plot property",
                "operationId": "getPlotProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Update plot property",
                "description": "Updates a plot property",
                "operationId": "updatePlotProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Delete plot property",
                "description": "Deletes a plot property",
                "operationId": "deletePlotProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{property}/states/{countryId}": {
            "get": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Get states by country for plot property",
                "description": "Returns states for a specific country",
                "operationId": "getStatesByCountryForPlot",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Gujarat"
                                                    },
                                                    "country_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{property}/districts/{stateId}": {
            "get": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Get districts by state for plot property",
                "description": "Returns districts for a specific state",
                "operationId": "getDistrictsByStateForPlot",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "State ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad"
                                                    },
                                                    "state_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{property}/talukas/{districtId}": {
            "get": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Get talukas by district for plot property",
                "description": "Returns talukas for a specific district",
                "operationId": "getTalukasByDistrictForPlot",
                "parameters": [
                    {
                        "name": "districtId",
                        "in": "path",
                        "description": "District ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad City"
                                                    },
                                                    "district_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{property}/amenities": {
            "post": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Store amenity for plot property",
                "description": "Creates a new amenity",
                "operationId": "storeAmenityForPlot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Swimming Pool"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amenity created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Swimming Pool"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{property}/land-types": {
            "post": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Store land type for plot property",
                "description": "Creates a new land type",
                "operationId": "storeLandTypeForPlot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Agricultural"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Land type created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Agricultural"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{property}/photo-positions": {
            "post": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Update photo positions for plot property",
                "description": "Updates the order of photos for a property",
                "operationId": "updatePhotoPositionsForPlot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "positions"
                                ],
                                "properties": {
                                    "positions": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "index": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "newIndex": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo positions updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{property}/photos/{photoIndex}": {
            "delete": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Delete photo for plot property",
                "description": "Deletes a specific photo from a property",
                "operationId": "deletePhotoForPlot",
                "parameters": [
                    {
                        "name": "photoIndex",
                        "in": "path",
                        "description": "Photo index",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/plot/{property}/update-status": {
            "patch": {
                "tags": [
                    "Plot Properties"
                ],
                "summary": "Update status for plot property",
                "description": "Updates the status of a plot property",
                "operationId": "updateStatusForPlot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "urgent",
                                            "under_offer",
                                            "reserved",
                                            "sold",
                                            "cancelled",
                                            "coming_soon",
                                            "price_reduced"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "status_text": {
                                                    "type": "string",
                                                    "example": "Active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get user profile",
                "description": "Retrieve the authenticated user's profile information",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile information",
                "operationId": "updateProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfileUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileUpdateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile/password": {
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user password",
                "description": "Update the authenticated user's password",
                "operationId": "updatePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all settings",
                "description": "Retrieve all application settings",
                "operationId": "getSettings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/update": {
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update settings",
                "description": "Update application settings",
                "operationId": "updateSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "settings": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not implemented"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad": {
            "get": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Get list of shad properties",
                "description": "Returns paginated list of shad properties",
                "operationId": "getShadProperties",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query for property fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "description": "Filter by country IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state_ids",
                        "in": "query",
                        "description": "Filter by state IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "district_ids",
                        "in": "query",
                        "description": "Filter by district IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city_ids",
                        "in": "query",
                        "description": "Filter by city IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Create new shad property",
                "description": "Creates a new shad property",
                "operationId": "createShadProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "owner_name",
                                    "contact_number",
                                    "size",
                                    "village",
                                    "taluka_id",
                                    "district_id",
                                    "state_id",
                                    "pincode",
                                    "country_id"
                                ],
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{id}": {
            "get": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Get shad property by ID",
                "description": "Returns a single shad property",
                "operationId": "getShadProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Update shad property",
                "description": "Updates a shad property",
                "operationId": "updateShadProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Delete shad property",
                "description": "Deletes a shad property",
                "operationId": "deleteShadProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{property}/states/{countryId}": {
            "get": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Get states by country for shad property",
                "description": "Returns states for a specific country",
                "operationId": "getStatesByCountryForShad",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Gujarat"
                                                    },
                                                    "country_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{property}/districts/{stateId}": {
            "get": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Get districts by state for shad property",
                "description": "Returns districts for a specific state",
                "operationId": "getDistrictsByStateForShad",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "State ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad"
                                                    },
                                                    "state_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{property}/talukas/{districtId}": {
            "get": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Get talukas by district for shad property",
                "description": "Returns talukas for a specific district",
                "operationId": "getTalukasByDistrictForShad",
                "parameters": [
                    {
                        "name": "districtId",
                        "in": "path",
                        "description": "District ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad City"
                                                    },
                                                    "district_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{property}/amenities": {
            "post": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Store amenity for shad property",
                "description": "Creates a new amenity",
                "operationId": "storeAmenityForShad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Swimming Pool"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amenity created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Swimming Pool"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{property}/land-types": {
            "post": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Store land type for shad property",
                "description": "Creates a new land type",
                "operationId": "storeLandTypeForShad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Agricultural"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Land type created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Agricultural"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{property}/photo-positions": {
            "post": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Update photo positions for shad property",
                "description": "Updates the order of photos for a property",
                "operationId": "updatePhotoPositionsForShad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "positions"
                                ],
                                "properties": {
                                    "positions": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "index": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "newIndex": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo positions updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{property}/photos/{photoIndex}": {
            "delete": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Delete photo for shad property",
                "description": "Deletes a specific photo from a property",
                "operationId": "deletePhotoForShad",
                "parameters": [
                    {
                        "name": "photoIndex",
                        "in": "path",
                        "description": "Photo index",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shad/{property}/update-status": {
            "patch": {
                "tags": [
                    "Shad Properties"
                ],
                "summary": "Update status for shad property",
                "description": "Updates the status of a shad property",
                "operationId": "updateStatusForShad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "urgent",
                                            "under_offer",
                                            "reserved",
                                            "sold",
                                            "cancelled",
                                            "coming_soon",
                                            "price_reduced"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "status_text": {
                                                    "type": "string",
                                                    "example": "Active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop": {
            "get": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Get list of shop properties",
                "description": "Returns paginated list of shop properties",
                "operationId": "getShopProperties",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query for property fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "description": "Filter by country IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state_ids",
                        "in": "query",
                        "description": "Filter by state IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "district_ids",
                        "in": "query",
                        "description": "Filter by district IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city_ids",
                        "in": "query",
                        "description": "Filter by city IDs (comma separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Create new shop property",
                "description": "Creates a new shop property",
                "operationId": "createShopProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "owner_name",
                                    "contact_number",
                                    "size",
                                    "village",
                                    "taluka_id",
                                    "district_id",
                                    "state_id",
                                    "pincode",
                                    "country_id"
                                ],
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{id}": {
            "get": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Get shop property by ID",
                "description": "Returns a single shop property",
                "operationId": "getShopProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Update shop property",
                "description": "Updates a shop property",
                "operationId": "updateShopProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "owner_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "1000 sq ft"
                                    },
                                    "apartment_name": {
                                        "type": "string",
                                        "example": "Sunshine Apartments"
                                    },
                                    "bhk": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_apartment": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "apartment_floor": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_tenament": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "tenament_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "second_line": {
                                        "type": "string",
                                        "example": "Apartment 4B"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Green Valley"
                                    },
                                    "taluka_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "vavetar": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "vavetar_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "any_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "electric_poll": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "electric_poll_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "family_issue": {
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "family_issue_description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "road_distance": {
                                        "type": "string",
                                        "example": "500 meters"
                                    },
                                    "additional_notes": {
                                        "type": "string",
                                        "example": "Near school"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "land_types": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Delete shop property",
                "description": "Deletes a shop property",
                "operationId": "deleteShopProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{property}/states/{countryId}": {
            "get": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Get states by country for shop property",
                "description": "Returns states for a specific country",
                "operationId": "getStatesByCountryForShop",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Gujarat"
                                                    },
                                                    "country_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{property}/districts/{stateId}": {
            "get": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Get districts by state for shop property",
                "description": "Returns districts for a specific state",
                "operationId": "getDistrictsByStateForShop",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "State ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad"
                                                    },
                                                    "state_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{property}/talukas/{districtId}": {
            "get": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Get talukas by district for shop property",
                "description": "Returns talukas for a specific district",
                "operationId": "getTalukasByDistrictForShop",
                "parameters": [
                    {
                        "name": "districtId",
                        "in": "path",
                        "description": "District ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ahmedabad City"
                                                    },
                                                    "district_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{property}/amenities": {
            "post": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Store amenity for shop property",
                "description": "Creates a new amenity",
                "operationId": "storeAmenityForShop",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Swimming Pool"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amenity created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Swimming Pool"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{property}/land-types": {
            "post": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Store land type for shop property",
                "description": "Creates a new land type",
                "operationId": "storeLandTypeForShop",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Agricultural"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Land type created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Agricultural"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{property}/photo-positions": {
            "post": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Update photo positions for shop property",
                "description": "Updates the order of photos for a property",
                "operationId": "updatePhotoPositionsForShop",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "positions"
                                ],
                                "properties": {
                                    "positions": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "index": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "newIndex": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo positions updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{property}/photos/{photoIndex}": {
            "delete": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Delete photo for shop property",
                "description": "Deletes a specific photo from a property",
                "operationId": "deletePhotoForShop",
                "parameters": [
                    {
                        "name": "photoIndex",
                        "in": "path",
                        "description": "Photo index",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Photo deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/{property}/update-status": {
            "patch": {
                "tags": [
                    "Shop Properties"
                ],
                "summary": "Update status for shop property",
                "description": "Updates the status of a shop property",
                "operationId": "updateStatusForShop",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "urgent",
                                            "under_offer",
                                            "reserved",
                                            "sold",
                                            "cancelled",
                                            "coming_soon",
                                            "price_reduced"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "status_text": {
                                                    "type": "string",
                                                    "example": "Active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wishlist": {
            "get": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Get user's wishlist",
                "description": "Retrieve all properties in the authenticated user's wishlist",
                "operationId": "getWishlist",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishlistResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Add property to wishlist",
                "description": "Add a property to the authenticated user's wishlist",
                "operationId": "addToWishlist",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddToWishlistRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToWishlistResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wishlist/{propertyId}": {
            "delete": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Remove property from wishlist",
                "description": "Remove a property from the authenticated user's wishlist",
                "operationId": "removeFromWishlist",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoveFromWishlistResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Property not found in wishlist"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "required": [
                    "name",
                    "email",
                    "contact",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "contact": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "AuthResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation successful"
                    },
                    "data": {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            },
                            "token": {
                                "type": "string",
                                "example": "1|abcdefghijk1234567890"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "contact": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "role": {
                        "type": "string",
                        "example": "user"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "LoginResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Login successful"
                    },
                    "data": {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            },
                            "token": {
                                "type": "string",
                                "example": "1|abcdefghijk1234567890"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RegisterResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Registration successful"
                    },
                    "data": {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "properties": {
                            "email": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The email field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Property": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "owner_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "contact_number": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "size": {
                        "type": "string",
                        "example": "1000 sq ft"
                    },
                    "apartment_name": {
                        "type": "string",
                        "example": "Sunshine Apartments"
                    },
                    "bhk": {
                        "type": "integer",
                        "example": 2
                    },
                    "is_apartment": {
                        "type": "boolean",
                        "example": true
                    },
                    "apartment_floor": {
                        "type": "integer",
                        "example": 3
                    },
                    "is_tenament": {
                        "type": "boolean",
                        "example": false
                    },
                    "tenament_floors": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_line": {
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "second_line": {
                        "type": "string",
                        "example": "Apartment 4B"
                    },
                    "village": {
                        "type": "string",
                        "example": "Green Valley"
                    },
                    "taluka_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "district_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "state_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "pincode": {
                        "type": "string",
                        "example": "123456"
                    },
                    "country_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "property_type": {
                        "type": "string",
                        "example": "land_jamin"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "vavetar": {
                        "type": "string",
                        "example": "Yes"
                    },
                    "any_issue": {
                        "type": "string",
                        "example": "No"
                    },
                    "issue_description": {
                        "type": "string",
                        "example": ""
                    },
                    "electric_poll": {
                        "type": "string",
                        "example": "Yes"
                    },
                    "electric_poll_count": {
                        "type": "integer",
                        "example": 2
                    },
                    "family_issue": {
                        "type": "string",
                        "example": "No"
                    },
                    "family_issue_description": {
                        "type": "string",
                        "example": ""
                    },
                    "road_distance": {
                        "type": "string",
                        "example": "500 meters"
                    },
                    "additional_notes": {
                        "type": "string",
                        "example": "Near school"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "PropertyResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#/components/schemas/Property"
                    }
                },
                "type": "object"
            },
            "PropertiesResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Property"
                        }
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "An error occurred"
                    }
                },
                "type": "object"
            },
            "Country": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "India"
                    },
                    "code": {
                        "type": "string",
                        "example": "IN"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "State": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Gujarat"
                    },
                    "country_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "District": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Ahmedabad"
                    },
                    "state_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "City": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Ahmedabad City"
                    },
                    "district_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "CountriesResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Country"
                        }
                    }
                },
                "type": "object"
            },
            "StatesResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/State"
                        }
                    }
                },
                "type": "object"
            },
            "DistrictsResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/District"
                        }
                    }
                },
                "type": "object"
            },
            "CitiesResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/City"
                        }
                    }
                },
                "type": "object"
            },
            "Amenity": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Swimming Pool"
                    },
                    "description": {
                        "type": "string",
                        "example": "Swimming pool facility"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "LandType": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Agricultural"
                    },
                    "description": {
                        "type": "string",
                        "example": "Agricultural land"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "AmenitiesResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Amenity"
                        }
                    }
                },
                "type": "object"
            },
            "LandTypesResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LandType"
                        }
                    }
                },
                "type": "object"
            },
            "ProfileUpdateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    }
                },
                "type": "object"
            },
            "PasswordUpdateRequest": {
                "properties": {
                    "current_password": {
                        "type": "string",
                        "example": "currentpassword"
                    },
                    "password": {
                        "type": "string",
                        "example": "newpassword"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "newpassword"
                    }
                },
                "type": "object"
            },
            "ProfileResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@example.com"
                            },
                            "phone": {
                                "type": "string",
                                "example": "1234567890"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-01-01T00:00:00.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-01-01T00:00:00.000000Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProfileUpdateResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Profile updated successfully"
                    },
                    "data": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@example.com"
                            },
                            "phone": {
                                "type": "string",
                                "example": "1234567890"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-01-01T00:00:00.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-01-01T00:00:00.000000Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "WishlistItem": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "property_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "WishlistArray": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "example": 1
                }
            },
            "AddToWishlistRequest": {
                "required": [
                    "property_id"
                ],
                "properties": {
                    "property_id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "WishlistResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Wishlist retrieved successfully"
                    },
                    "data": {
                        "$ref": "#/components/schemas/WishlistArray"
                    }
                },
                "type": "object"
            },
            "AddToWishlistResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Property added to wishlist"
                    },
                    "data": {
                        "$ref": "#/components/schemas/WishlistItem"
                    }
                },
                "type": "object"
            },
            "RemoveFromWishlistResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Property removed from wishlist"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for User Authentication"
        },
        {
            "name": "Global Search",
            "description": "API Endpoints for Global Property Search"
        },
        {
            "name": "House Properties",
            "description": "API Endpoints for House Property Management"
        },
        {
            "name": "Land Jamin Properties",
            "description": "API Endpoints for Land Jamin Property Management"
        },
        {
            "name": "Locations",
            "description": "API Endpoints for Location Management"
        },
        {
            "name": "Master Data",
            "description": "API Endpoints for Master Data Management"
        },
        {
            "name": "Plot Properties",
            "description": "API Endpoints for Plot Property Management"
        },
        {
            "name": "User Profile",
            "description": "API Endpoints for User Profile Management"
        },
        {
            "name": "Shad Properties",
            "description": "API Endpoints for Shad Property Management"
        },
        {
            "name": "Shop Properties",
            "description": "API Endpoints for Shop Property Management"
        },
        {
            "name": "Wishlist",
            "description": "API Endpoints for User Wishlist Management"
        },
        {
            "name": "Settings",
            "description": "Settings"
        }
    ]
}